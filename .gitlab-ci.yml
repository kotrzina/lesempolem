stages:
  - test
  - build
  - deploy

services:
  - docker:dind

cache:
  policy: pull
  paths:
    - vendor/

unit-tests:
  stage: test
  image: php:7.4-cli
  cache:
    policy: pull-push
    paths:
      - vendor/
  script:
    - apt-get update && apt-get install -y zlib1g-dev git libpq-dev libzip-dev unzip libpng-dev libjpeg-dev
    - docker-php-ext-install gd
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php composer-setup.php --install-dir=/bin --filename=composer
    - php -r "unlink('composer-setup.php');"
    - composer install
    - mkdir dd && chmod -R 777 dd
    - mkdir log && chmod -R 777 log
    - mkdir -p temp/sessions && mkdir -p temp/data && chmod -R 777 dd
    - php vendor/bin/tester tests
    - php -d memory_limit=4G vendor/bin/phpstan analyse -l max -c phpstan.neon app

build:
  image: docker:stable
  stage: build
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

deploy:
  image: alpine:3.9
  stage: deploy
  script:
    - apk update
    - apk add --no-cache openssh-client ca-certificates bash
    - echo $DEPLOY_KEY | base64 -d > key
    - chmod 400 key
    - ssh -i key -oStrictHostKeyChecking=no ${DEPLOY_USER}@${DEPLOY_SERVER_IP} 'docker pull registry.gitlab.com/kotrzina/lesempolem:latest && cd wedos-vps && docker-compose stop lesempolem_cz && docker-compose up -d lesempolem_cz'
  only:
    - master
